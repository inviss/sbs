<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	  
	<context:annotation-config />
	<context:component-scan base-package="com.sbs.das.commons.task" />
	
	<bean class="com.sbs.das.commons.task.QuartzLoadInitialize" init-method="init" />
	
	<!-- Execute Job -->
	<bean name="userContentExpiredDelDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="com.sbs.das.commons.task.UserContentExpiredDelJob">
	</bean>
	<bean name="archivedContentDelDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="com.sbs.das.commons.task.ArchivedContentDelJob">
	</bean>
	<bean name="downloadedContentDelDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="com.sbs.das.commons.task.DownloadedContentDelJob">
	</bean>
	<bean name="storageCheckDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="com.sbs.das.commons.task.StorageCheckJob">
	</bean>

	<bean name="merUnCompressDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="com.sbs.das.commons.task.MerUnCompressJob">
	</bean>

	<bean name="highStorageQuotaCheckDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="com.sbs.das.commons.task.HighStorageQuotaCheckJob">
	</bean>
	
	
	<!-- Trigger -->	
	<bean id="userRequestContentDelTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="userContentExpiredDelDetail"
		p:startDelay="5000"
		p:cronExpression="0 0 1 * * ?" />
	
	<bean id="archivedContentDelTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="archivedContentDelDetail"
		p:startDelay="5000"
		p:cronExpression="0 0 2 * * ?" />
	
	<bean id="downloadedContentDelTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="downloadedContentDelDetail"
		p:startDelay="5000"
		p:cronExpression="0 0 3 * * ?" />
	
	<bean id="storageCheckTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="storageCheckDetail"
		p:startDelay="5000"
		p:cronExpression="0 0 0/1 * * ?" />

	<bean id="merUnCompressTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="merUnCompressDetail"
		p:startDelay="5000"
		p:cronExpression="0/6 * * * * ?" />

	<bean id="highStorageQuotaCheckTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="highStorageQuotaCheckDetail"
		p:startDelay="5000"
		p:cronExpression="0 0/2 * * * ?" />
	
	<!-- Trigger Add -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		p:waitForJobsToCompleteOnShutdown="true">
		<property name="triggers">
			<list>
				<!--
				<ref bean="userRequestContentDelTrigger" />
				<ref bean="archivedContentDelTrigger" />
				<ref bean="downloadedContentDelTrigger" />
				<ref bean="storageCheckTrigger" />
				<ref bean="highStorageQuotaCheckTrigger" />
				-->
				<!--  
			    <ref bean="merUnCompressTrigger" />
				-->
			</list>
		</property>
		<property name="applicationContextSchedulerContextKey" value="applicationContext"/>
		<property name="dataSource" ref="dataSource"/>
		<property name="transactionManager" ref="transactionManager"/>
		<property name="overwriteExistingJobs" value="true"/>
		<property name="jobFactory"> 
			<bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory"/> 
		</property>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceName">DasClusteredScheduler</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">2</prop> 
				<prop key="org.quartz.threadPool.threadPriority">4</prop>
				
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop> 
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.DB2v8Delegate</prop>
				<prop key="org.quartz.jobStore.useProperties">false</prop>
				<prop key="org.quartz.jobStore.dataSource">myDS</prop> 
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
				<prop key="org.quartz.jobStore.isClustered">true</prop>
				<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
			</props>
		</property>
		
	</bean>
	
	<bean class="com.sbs.das.commons.task.CpuAndMemoryCheck" init-method="start" destroy-method="stop"/>
	
</beans>
